"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _express = _interopRequireDefault(require("express"));
var _cors = _interopRequireDefault(require("cors"));
var path = _interopRequireWildcard(require("path"));
var bodyParser = _interopRequireWildcard(require("body-parser"));
var http = _interopRequireWildcard(require("http"));
var os = _interopRequireWildcard(require("os"));
var _logger = _interopRequireDefault(require("./logger"));
var _swagger = _interopRequireDefault(require("./swagger"));
var _mongo = _interopRequireDefault(require("./mongo"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const app = new _express.default();
class ExpressServer {
  constructor() {
    const root = path.normalize(`${__dirname}/../..`);
    app.use(bodyParser.json({
      limit: process.env.REQUEST_LIMIT || '100kb'
    }));
    app.use(bodyParser.urlencoded({
      extended: true,
      limit: process.env.REQUEST_LIMIT || '100kb'
    }));
    app.use(bodyParser.text({
      limit: process.env.REQUEST_LIMIT || '100kb'
    }));
    app.use(_express.default.static(`${root}/public`));
    app.use((0, _cors.default)());
  }
  router(routes) {
    this.routes = routes;
    return this;
  }
  listen(port = process.env.PORT) {
    const welcome = p => () => _logger.default.info(`up and running in ${process.env.NODE_ENV || 'development'} @: ${os.hostname()} on port: ${p}}`);
    (0, _swagger.default)(app, this.routes).then(() => {
      (0, _mongo.default)().then(() => {
        _logger.default.info("Database Loaded!");
        http.createServer(app).listen(port, welcome(port));
      });
    }).catch(e => {
      _logger.default.error(e);
      exit(1);
    });
    return app;
  }
}
exports.default = ExpressServer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NvcnMiLCJwYXRoIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJib2R5UGFyc2VyIiwiaHR0cCIsIm9zIiwiX2xvZ2dlciIsIl9zd2FnZ2VyIiwiX21vbmdvIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0Iiwib2JqIiwiYXBwIiwiRXhwcmVzcyIsIkV4cHJlc3NTZXJ2ZXIiLCJjb25zdHJ1Y3RvciIsInJvb3QiLCJub3JtYWxpemUiLCJfX2Rpcm5hbWUiLCJ1c2UiLCJqc29uIiwibGltaXQiLCJwcm9jZXNzIiwiZW52IiwiUkVRVUVTVF9MSU1JVCIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInRleHQiLCJzdGF0aWMiLCJjb3JzIiwicm91dGVyIiwicm91dGVzIiwibGlzdGVuIiwicG9ydCIsIlBPUlQiLCJ3ZWxjb21lIiwicCIsImwiLCJpbmZvIiwiTk9ERV9FTlYiLCJob3N0bmFtZSIsIm9hcyIsInRoZW4iLCJtb25nbyIsImNyZWF0ZVNlcnZlciIsImNhdGNoIiwiZXJyb3IiLCJleGl0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9jb21tb24vc2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5cbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0ICogYXMgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgKiBhcyBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnO1xuaW1wb3J0IGwgZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IG9hcyBmcm9tICcuL3N3YWdnZXInO1xuXG5cbmltcG9ydCBtb25nbyBmcm9tIFwiLi9tb25nb1wiO1xuXG5cbmNvbnN0IGFwcCA9IG5ldyBFeHByZXNzKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4cHJlc3NTZXJ2ZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCByb290ID0gcGF0aC5ub3JtYWxpemUoYCR7X19kaXJuYW1lfS8uLi8uLmApO1xuXG4gICAgYXBwLnVzZShib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogcHJvY2Vzcy5lbnYuUkVRVUVTVF9MSU1JVCB8fCAnMTAwa2InIH0pKTtcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlLCBsaW1pdDogcHJvY2Vzcy5lbnYuUkVRVUVTVF9MSU1JVCB8fCAnMTAwa2InIH0pKTtcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudGV4dCh7IGxpbWl0OiBwcm9jZXNzLmVudi5SRVFVRVNUX0xJTUlUIHx8ICcxMDBrYid9KSk7XG5cbiAgICBhcHAudXNlKEV4cHJlc3Muc3RhdGljKGAke3Jvb3R9L3B1YmxpY2ApKTtcblxuXG4gICAgYXBwLnVzZShjb3JzKCkpO1xuXG4gIH1cblxuICByb3V0ZXIocm91dGVzKSB7XG5cbiAgICB0aGlzLnJvdXRlcyA9IHJvdXRlcztcbiAgICByZXR1cm4gdGhpcztcblxuICB9XG5cbiAgbGlzdGVuKHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUKSB7XG4gICAgY29uc3Qgd2VsY29tZSA9IHAgPT4gKCkgPT5cbiAgICAgIGwuaW5mbyhcbiAgICAgICAgYHVwIGFuZCBydW5uaW5nIGluICR7cHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHxcbiAgICAgICAgICAnZGV2ZWxvcG1lbnQnfSBAOiAke29zLmhvc3RuYW1lKCl9IG9uIHBvcnQ6ICR7cH19YFxuICAgICAgKTtcblxuICAgIG9hcyhhcHAsIHRoaXMucm91dGVzKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuXG4gICAgICAgIG1vbmdvKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgbC5pbmZvKFwiRGF0YWJhc2UgTG9hZGVkIVwiKTtcbiAgICAgICAgICBodHRwLmNyZWF0ZVNlcnZlcihhcHApLmxpc3Rlbihwb3J0LCB3ZWxjb21lKHBvcnQpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgbC5lcnJvcihlKTtcbiAgICAgICAgZXhpdCgxKTtcbiAgICAgIH0pO1xuXG4gICAgcmV0dXJuIGFwcDtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFHQSxJQUFBQyxLQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBRSxJQUFBLEdBQUFDLHVCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxVQUFBLEdBQUFELHVCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSyxJQUFBLEdBQUFGLHVCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBTSxFQUFBLEdBQUFILHVCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBTyxPQUFBLEdBQUFSLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBUSxRQUFBLEdBQUFULHNCQUFBLENBQUFDLE9BQUE7QUFHQSxJQUFBUyxNQUFBLEdBQUFWLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQVUseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEsQ0FBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQVIsd0JBQUFR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