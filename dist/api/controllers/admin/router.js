"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var express = _interopRequireWildcard(require("express"));
var _controller = _interopRequireDefault(require("./controller"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var _default = exports.default = express.Router().post("/auth", _controller.default.signIn).post("/addExaminer", _controller.default.addExaminer).get("/getExaminers", _controller.default.getExaminers).get("/getExaminers/:id", _controller.default.getExaminersUsingId).get("/getAllExaminers", _controller.default.getAllExaminers).post("/addAdmin", _controller.default.addAdmin).post("/deleteExaminer", _controller.default.deleteExaminer).post("/updateExaminer", _controller.default.updateExaminer).post("/updateAdmin", _controller.default.updateAdmin).get("/getAdmins", _controller.default.getAdmins).post("/getPassword", _controller.default.getPassword).post("/verifyToken", _controller.default.verifyToken).post("/addMultipleUsers", _controller.default.addMultipleUsers).get("/getUniversities", _controller.default.getUniversities).post("/addUniversity", _controller.default.addUniversity).post("/updateUniversity", _controller.default.updateUniversity).get("/getMetaData", _controller.default.getMetaData).post("/assign", _controller.default.assign).get("/assignments", _controller.default.getAssignments);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2NvbnRyb2xsZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiUm91dGVyIiwicG9zdCIsImNvbnRyb2xsZXIiLCJzaWduSW4iLCJhZGRFeGFtaW5lciIsImdldEV4YW1pbmVycyIsImdldEV4YW1pbmVyc1VzaW5nSWQiLCJnZXRBbGxFeGFtaW5lcnMiLCJhZGRBZG1pbiIsImRlbGV0ZUV4YW1pbmVyIiwidXBkYXRlRXhhbWluZXIiLCJ1cGRhdGVBZG1pbiIsImdldEFkbWlucyIsImdldFBhc3N3b3JkIiwidmVyaWZ5VG9rZW4iLCJhZGRNdWx0aXBsZVVzZXJzIiwiZ2V0VW5pdmVyc2l0aWVzIiwiYWRkVW5pdmVyc2l0eSIsInVwZGF0ZVVuaXZlcnNpdHkiLCJnZXRNZXRhRGF0YSIsImFzc2lnbiIsImdldEFzc2lnbm1lbnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc2VydmVyL2FwaS9jb250cm9sbGVycy9hZG1pbi9yb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSBcIi4vY29udHJvbGxlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBleHByZXNzXG4gIC5Sb3V0ZXIoKVxuICAucG9zdChcIi9hdXRoXCIsIGNvbnRyb2xsZXIuc2lnbkluKVxuICAucG9zdChcIi9hZGRFeGFtaW5lclwiLCBjb250cm9sbGVyLmFkZEV4YW1pbmVyKVxuICAuZ2V0KFwiL2dldEV4YW1pbmVyc1wiLCBjb250cm9sbGVyLmdldEV4YW1pbmVycylcbiAgLmdldChcIi9nZXRFeGFtaW5lcnMvOmlkXCIsIGNvbnRyb2xsZXIuZ2V0RXhhbWluZXJzVXNpbmdJZClcbiAgLmdldChcIi9nZXRBbGxFeGFtaW5lcnNcIiwgY29udHJvbGxlci5nZXRBbGxFeGFtaW5lcnMpXG4gIC5wb3N0KFwiL2FkZEFkbWluXCIsIGNvbnRyb2xsZXIuYWRkQWRtaW4pXG4gIC5wb3N0KFwiL2RlbGV0ZUV4YW1pbmVyXCIsIGNvbnRyb2xsZXIuZGVsZXRlRXhhbWluZXIpXG4gIC5wb3N0KFwiL3VwZGF0ZUV4YW1pbmVyXCIsIGNvbnRyb2xsZXIudXBkYXRlRXhhbWluZXIpXG4gIC5wb3N0KFwiL3VwZGF0ZUFkbWluXCIsIGNvbnRyb2xsZXIudXBkYXRlQWRtaW4pXG4gIC5nZXQoXCIvZ2V0QWRtaW5zXCIsIGNvbnRyb2xsZXIuZ2V0QWRtaW5zKVxuICAucG9zdChcIi9nZXRQYXNzd29yZFwiLCBjb250cm9sbGVyLmdldFBhc3N3b3JkKVxuICAucG9zdChcIi92ZXJpZnlUb2tlblwiLCBjb250cm9sbGVyLnZlcmlmeVRva2VuKVxuICAucG9zdChcIi9hZGRNdWx0aXBsZVVzZXJzXCIsIGNvbnRyb2xsZXIuYWRkTXVsdGlwbGVVc2VycylcbiAgLmdldChcIi9nZXRVbml2ZXJzaXRpZXNcIiwgY29udHJvbGxlci5nZXRVbml2ZXJzaXRpZXMpXG4gIC5wb3N0KFwiL2FkZFVuaXZlcnNpdHlcIiwgY29udHJvbGxlci5hZGRVbml2ZXJzaXR5KVxuICAucG9zdChcIi91cGRhdGVVbml2ZXJzaXR5XCIsIGNvbnRyb2xsZXIudXBkYXRlVW5pdmVyc2l0eSlcbiAgLmdldChcIi9nZXRNZXRhRGF0YVwiLCBjb250cm9sbGVyLmdldE1ldGFEYXRhKVxuICAucG9zdChcIi9hc3NpZ25cIiwgY29udHJvbGxlci5hc3NpZ24pXG4gIC5nZXQoXCIvYXNzaWdubWVudHNcIiwgY29udHJvbGxlci5nZXRBc3NpZ25tZW50cyk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFdBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUFzQyxTQUFBRSx1QkFBQUMsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUFBLFNBQUFHLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLENBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFSLHdCQUFBUSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUgsVUFBQSxTQUFBRyxDQUFBLGVBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsV0FBQUYsT0FBQSxFQUFBRSxDQUFBLFFBQUFHLENBQUEsR0FBQUosd0JBQUEsQ0FBQUcsQ0FBQSxPQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQUMsR0FBQSxDQUFBSixDQUFBLFVBQUFHLENBQUEsQ0FBQUUsR0FBQSxDQUFBTCxDQUFBLE9BQUFNLENBQUEsS0FBQUMsU0FBQSxVQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLENBQUEsSUFBQVosQ0FBQSxvQkFBQVksQ0FBQSxJQUFBSCxNQUFBLENBQUFJLFNBQUEsQ0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFmLENBQUEsRUFBQVksQ0FBQSxTQUFBSSxDQUFBLEdBQUFSLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBWCxDQUFBLEVBQUFZLENBQUEsVUFBQUksQ0FBQSxLQUFBQSxDQUFBLENBQUFYLEdBQUEsSUFBQVcsQ0FBQSxDQUFBQyxHQUFBLElBQUFSLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUksQ0FBQSxJQUFBVixDQUFBLENBQUFNLENBQUEsSUFBQVosQ0FBQSxDQUFBWSxDQUFBLFlBQUFOLENBQUEsQ0FBQVIsT0FBQSxHQUFBRSxDQUFBLEVBQUFHLENBQUEsSUFBQUEsQ0FBQSxDQUFBYyxHQUFBLENBQUFqQixDQUFBLEVBQUFNLENBQUEsR0FBQUEsQ0FBQTtBQUFBLElBQUFZLFFBQUEsR0FBQUMsT0FBQSxDQUFBckIsT0FBQSxHQUV2QlAsT0FBTyxDQUNuQjZCLE1BQU0sQ0FBQyxDQUFDLENBQ1JDLElBQUksQ0FBQyxPQUFPLEVBQUVDLG1CQUFVLENBQUNDLE1BQU0sQ0FBQyxDQUNoQ0YsSUFBSSxDQUFDLGNBQWMsRUFBRUMsbUJBQVUsQ0FBQ0UsV0FBVyxDQUFDLENBQzVDbkIsR0FBRyxDQUFDLGVBQWUsRUFBRWlCLG1CQUFVLENBQUNHLFlBQVksQ0FBQyxDQUM3Q3BCLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRWlCLG1CQUFVLENBQUNJLG1CQUFtQixDQUFDLENBQ3hEckIsR0FBRyxDQUFDLGtCQUFrQixFQUFFaUIsbUJBQVUsQ0FBQ0ssZUFBZSxDQUFDLENBQ25ETixJQUFJLENBQUMsV0FBVyxFQUFFQyxtQkFBVSxDQUFDTSxRQUFRLENBQUMsQ0FDdENQLElBQUksQ0FBQyxpQkFBaUIsRUFBRUMsbUJBQVUsQ0FBQ08sY0FBYyxDQUFDLENBQ2xEUixJQUFJLENBQUMsaUJBQWlCLEVBQUVDLG1CQUFVLENBQUNRLGNBQWMsQ0FBQyxDQUNsRFQsSUFBSSxDQUFDLGNBQWMsRUFBRUMsbUJBQVUsQ0FBQ1MsV0FBVyxDQUFDLENBQzVDMUIsR0FBRyxDQUFDLFlBQVksRUFBRWlCLG1CQUFVLENBQUNVLFNBQVMsQ0FBQyxDQUN2Q1gsSUFBSSxDQUFDLGNBQWMsRUFBRUMsbUJBQVUsQ0FBQ1csV0FBVyxDQUFDLENBQzVDWixJQUFJLENBQUMsY0FBYyxFQUFFQyxtQkFBVSxDQUFDWSxXQUFXLENBQUMsQ0FDNUNiLElBQUksQ0FBQyxtQkFBbUIsRUFBRUMsbUJBQVUsQ0FBQ2EsZ0JBQWdCLENBQUMsQ0FDdEQ5QixHQUFHLENBQUMsa0JBQWtCLEVBQUVpQixtQkFBVSxDQUFDYyxlQUFlLENBQUMsQ0FDbkRmLElBQUksQ0FBQyxnQkFBZ0IsRUFBRUMsbUJBQVUsQ0FBQ2UsYUFBYSxDQUFDLENBQ2hEaEIsSUFBSSxDQUFDLG1CQUFtQixFQUFFQyxtQkFBVSxDQUFDZ0IsZ0JBQWdCLENBQUMsQ0FDdERqQyxHQUFHLENBQUMsY0FBYyxFQUFFaUIsbUJBQVUsQ0FBQ2lCLFdBQVcsQ0FBQyxDQUMzQ2xCLElBQUksQ0FBQyxTQUFTLEVBQUVDLG1CQUFVLENBQUNrQixNQUFNLENBQUMsQ0FDbENuQyxHQUFHLENBQUMsY0FBYyxFQUFFaUIsbUJBQVUsQ0FBQ21CLGNBQWMsQ0FBQyJ9